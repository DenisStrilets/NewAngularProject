{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/registration/registration.component.html","./src/app/auth/registration/registration.component.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/models/commentSendModel.ts","./src/app/models/credentialsSendModel.ts","./src/app/models/postModel.ts","./src/app/models/postSendModel.ts","./src/app/models/userSendModel.ts","./src/app/post/allPosts/allPost.component.html","./src/app/post/allPosts/allPost.component.ts","./src/app/post/newPost/newPost.component.html","./src/app/post/newPost/newPost.component.ts","./src/app/post/post-detail/post.component.html","./src/app/post/post-detail/post.component.ts","./src/app/services/auth.service.ts","./src/app/services/comment.service.ts","./src/app/services/hostHelper.service.ts","./src/app/services/post.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,24BAA24B,oL;;;;;;;;;;;;;;;;ACAj2B;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAGM;AACQ;AACc;AACH;AACE;AACR;AACN;AACa;AACnB;AACkB;AACV;AAC2B;AAC7B;AACQ;AACR;AACX;AACiB;AACnB;AAKzC,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0FAAgB,EAAE;IACzC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,0FAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,uFAAa,EAAE;IAC1D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,uFAAa,EAAE;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yFAAgB,EAAC,WAAW,EAAE,CAAC,+DAAS,CAAC,EAAC;IACxE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yGAAqB,EAAC;IACzD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,oFAAc,EAAC;CAG3C,CAAC;AAqCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,0FAAgB;gBAChB,uFAAa;gBACb,yFAAgB;gBAChB,kFAAe;gBACf,yGAAqB;gBACrB,oFAAc;aACf;YACD,OAAO,EAAE;gBACP,gFAAa;gBACZ,oEAAW;gBACX,kEAAU;gBACV,+EAAgB;gBAChB,4EAAmB;gBAClB,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAClC;YACD,SAAS,EAAE;gBAET,iFAAc;gBACd,2EAAW;gBACX,wFAAkB;gBAClB,4EAAW;gBACX,4EAAW;gBACX,+DAAS;gBACX,EAAC,OAAO,EAAE,uEAAa,EAAE,QAAQ,EAAG,GAAG,EAAE;aAExC;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAE1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACzEqB;AACW;AACA;AAKtD;IACE,mBAAoB,IAAiB,EAAS,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhE,+BAAW,GAAX;QAEE,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAC3B,CAAC;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAZU,SAAS;QADrB,yEAAU,EAAE;yCAEe,2EAAW,EAAiB,+DAAM;OADjD,SAAS,CAarB;IAAD,gBAAC;CAAA;AAbqB;;;;;;;;ACPtB,4DAA4D,+LAA+L,0EAA0E,yuBAAyuB,0EAA0E,0qBAA0qB,iEAAiE,6CAA6C,+DAA+D,slB;;;;;;;;;;;;;;;;;;;;;;;ACE75D;AACkB;AAEX;AAEgB;AAEf;AAS1D;IAOI,wBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvE,iCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAS,CAAC;YACxB,UAAU,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,KAAK,CAAC,CAAC;YAC1E,UAAU,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAClF,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL;QAAA,iBAkBC;QAjBO,wBAAsC,EAArC,sBAAQ,EAAE,sBAAQ,CAAoB;QAC7C,IAAM,IAAI,GAAG,IAAI,0FAAoB,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC;QAEzD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;aAE3B,SAAS,CAAC,UAAC,MAAM;YAEd,EAAE,EAAC,MAAM,CAAC,EAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAClB,MAAM,CAAC;YACT,CAAC;QAEL,CAAC,EAED,eAAK,IAAI,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC,CAAC;IAEhC,CAAC;IAlCI,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,OAAO;;YAEjB,SAAS,EAAE,CAAC,2EAAW,CAAC;SACzB,CAAC;yCAQmC,2EAAW,EAAkB,+DAAM;OAP3D,cAAc,CAoCpB;IAAD,qBAAC;CAAA;AApCoB;;;;;;;;AClB3B,gEAAgE,0MAA0M,oEAAoE,41BAA41B,0EAA0E,0uBAA0uB,iEAAiE,0DAA0D,+DAA+D,gIAAgI,kEAAkE,yiBAAyiB,0EAA0E,siBAAsiB,oEAAoE,kvB;;;;;;;;;;;;;;;;;;;;;;;ACCrgH;AACQ;AACU;AAC3B;AACkB;AAY3D;IAIM,+BAAoB,YAAyB,EAAU,MAAc;QAAjD,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAErE,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAS,CAAC;YACxB,OAAO,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,KAAK,CAAC,CAAC;YACvE,UAAU,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,UAAU,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,OAAO,EAAE,IAAI,mEAAW,CAAC,KAAK,EAAE,CAAC,kEAAU,CAAC,YAAY,CAAC,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;IAGD,wCAAQ,GAAR;QAAA,iBAkBC;QAjBO,wBAAkD,EAAjD,gBAAK,EAAE,sBAAQ,EAAE,cAAI,EAAC,sBAAQ,CAAoB;QACzD,IAAM,IAAI,GAAG,IAAI,4EAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAoB;YAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAElB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACpC,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC;YAChB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC/C,CAAC,EAAE,eAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IAGJ,CAAC;IArCM,qBAAqB;QAPjC,wEAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;YAExB,SAAS,EAAE,CAAC,2EAAW,CAAC;SACzB,CAAC;yCAOoC,2EAAW,EAAkB,+DAAM;OAJ9D,qBAAqB,CAuC7B;IAAD,4BAAC;CAAA;AAvC6B;;;;;;;;ACjBlC,83CAA83C,gE;;;;;;;;;;;;;;;;;;;;ACAj0C;AAEN;AAQrD;IAKD,yBAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAE5C,CAAC;IAED,gCAAM,GAAN;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAGE;QAFC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAEhG,CAAC;IAED,qCAAW,GAAX;QAEE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IArBY,eAAe;QAL7B,wEAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;YAEtB,SAAS,EAAE,CAAC,2EAAW,CAAC;SACzB,CAAC;yCAM6B,2EAAW;OAL7B,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;ACT9B;AAAA;IACI,0BACW,MAAc,EACd,WAAmB,EACpB,MAAc;QAFb,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAQ;QACpB,WAAM,GAAN,MAAM,CAAQ;IACtB,CAAC;IACP,uBAAC;AAAD,CAAC;;;;;;;;;;ACND;AAAA;IAEI,8BAEO,QAAe,EACf,QAAe;QADf,aAAQ,GAAR,QAAQ,CAAO;QACf,aAAQ,GAAR,QAAQ,CAAO;IAIrB,CAAC;IAEF,2BAAC;AAAD,CAAC;;;;;;;;;;ACTL;AAAA;IAAA;IAQA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;ACVD;AAAA;IACI,uBACG,KAAY,EACZ,WAAkB,EAClB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAO;QACZ,gBAAW,GAAX,WAAW,CAAO;QAClB,WAAM,GAAN,MAAM,CAAQ;IACf,CAAC;IACP,oBAAC;AAAD,CAAC;;;;;;;;;;ACLD;AAAA;IACI,uBACO,KAAY,EACZ,QAAe,EACf,IAAW,EACX,QAAe,EAEf,KAAc;QALd,UAAK,GAAL,KAAK,CAAO;QACZ,aAAQ,GAAR,QAAQ,CAAO;QACf,SAAI,GAAJ,IAAI,CAAO;QACX,aAAQ,GAAR,QAAQ,CAAO;QAEf,UAAK,GAAL,KAAK,CAAS;IACnB,CAAC;IAEH,oBAAC;AAAD,CAAC;;;;;;;;;ACZL,2DAA2D,4fAA4f,YAAY,sPAAsP,aAAa,yVAAyV,kBAAkB,6LAA6L,eAAe,kG;;;;;;;;;;;;;;;;;;;;;ACA50C;AACS;AAEjB;AAczC;IAKI,0BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,mCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAGD,+BAAI,GAAJ;QAAA,iBAGC;QAFG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAC,IAAiB,IAAM,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;IAEvF,CAAC;IAGD,+BAAI,GAAJ,UAAK,EAAU;QAAf,iBAIE;QAFG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAiB,IAAI,YAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;IAE7E,CAAC;IAtBO,gBAAgB;QAR5B,wEAAS,CAAC;YAEP,QAAQ,EAAE,SAAS;;YAGnB,SAAS,EAAE,CAAC,2EAAW,CAAC;SAE3B,CAAC;yCAMmC,2EAAW,EAAkB,+DAAM;OAL3D,gBAAgB,CAwB5B;IAAD,uBAAC;CAAA;AAxB4B;;;;;;;;ACjB7B,oEAAoE,gSAAgS,4CAA4C,yaAAya,8CAA8C,0dAA0d,wDAAwD,gvB;;;;;;;;;;;;;;;;;;;;;;ACA/0C;AAEgB;AACjB;AACkB;AAU3D;IAQI,0BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAK,CAAC;IAE1E,+BAAI,GAAJ;QAAA,iBAGC;QAFG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAC,IAAiB,IAAM,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;IAEvF,CAAC;IAED,iCAAM,GAAN,UAAQ,IAAY;QAApB,iBAKC;QAHG,IAAI,IAAI,GAAkB,IAAI,4EAAa,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QACvF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAElF,CAAC;IApBQ,gBAAgB;QAN5B,wEAAS,CAAC;YACP,QAAQ,EAAE,SAAS;;YAEnB,MAAM,EAAE,CAAC,8BAA8B,CAAC;SAC3C,CAAC;yCAUmC,2EAAW,EAAkB,+DAAM;OAR3D,gBAAgB,CAqB5B;IAAD,uBAAC;CAAA;AArB4B;;;;;;;;ACd7B,gFAAgF,iQAAiQ,iBAAiB,iOAAiO,kBAAkB,sSAAsS,uBAAuB,4GAA4G,eAAe,kIAAkI,oBAAoB,whBAAwhB,aAAa,+QAA+Q,eAAe,qTAAqT,kBAAkB,gtC;;;;;;;;;;;;;;;;;;;;;;;;ACA3vE;AACQ;AACM;AACb;AAEc;AAGR;AAWzD;IAYQ,uBAAoB,aAA6B,EAAU,WAAwB,EAAU,cAA8B,EAAS,MAAc;QAA9H,kBAAa,GAAb,aAAa,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAVlJ,cAAS,GAAc,IAAI,oEAAS,EAAE,CAAC;QAOvC,aAAQ,GAAc,IAAI,KAAK,EAAE,CAAC;QAI9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,gCAAQ,GAAR;QAEG,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAGC;QAFG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAe;YAAO,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAAC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YAC5H,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;QAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAGD,kCAAU,GAAV;QAAA,iBAOC;QANG,IAAI,MAAM,GAAqB,IAAI,kFAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC1G,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAc,IAAK,YAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;QAEjF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAE5B,CAAC;IAED,8BAAM,GAAN,UAAO,EAAU;QAAjB,iBAGC;QAFG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAc,IAAK,YAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;IAE9E,CAAC;IAxCI,aAAa;QARxB,wEAAS,CAAC;YAGR,QAAQ,EAAE,MAAM;;YAEhB,SAAS,EAAE,CAAC,2EAAW,EAAC,iFAAc,CAAC;SAC1C,CAAC;yCAcyC,uEAAc,EAAuB,2EAAW,EAA0B,iFAAc,EAAiB,+DAAM;OAZ7I,aAAa,CA0CrB;IAAD,oBAAC;CAAA;AA1CqB;;;;;;;;;;;;;;;;;;;;;;;ACnBiB;AACD;AAE2B;AACX;AAM1D;IAQI,qBAAoB,WAA+B,EAAS,IAAU;QAAlD,gBAAW,GAAX,WAAW,CAAoB;QAAS,SAAI,GAAJ,IAAI,CAAM;QAN9D,yBAAoB,GAAG,IAAI,gEAAe,CAAU,KAAK,CAAC,CAAC;QAEnE,mBAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAElD,aAAQ,GAAG,KAAK,CAAC;QAKrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAElD,CAAC;IAED,2BAAK,GAAL,UAAM,IAAyB;QAA/B,iBAcC;QAbG,IAAM,IAAI,GAAG,EAAE,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC/D,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,gBAAgB,EAAG,IAAI,EAAC,EAAE,OAAO,WAAE,CAAC;aACrF,GAAG,CAAC,aAAG,IAAE,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACpB,GAAG,CAAC,aAAG;YACD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACnD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC;IAEF,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,gCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAxCQ,WAAW;QADvB,yEAAU,EAAE;yCASwB,+EAAkB,EAAe,2DAAI;OAR7D,WAAW,CA2CvB;IAAD,kBAAC;CAAA;AA3CuB;;;;;;;;;;;;;;;;;;;;;;ACVmB;AACe;AAER;AAKlD;IAEQ,wBAAoB,WAA+B,EAAU,IAAgB;QAAzD,gBAAW,GAAX,WAAW,CAAoB;QAAU,SAAI,GAAJ,IAAI,CAAY;IAC7E,CAAC;IAGD,mCAAU,GAAV,UAAW,OAAyB;QAEjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,aAAa,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,+BAAM,GAAN,UAAO,EAAU;QAGhB,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,cAAc,GAAG,EAAE,CAAC,CAAC;IAC5E,CAAC;IAfI,cAAc;QAD1B,yEAAU,EAAE;yCAG4B,+EAAkB,EAAgB,wEAAU;OAFxE,cAAc,CAgBtB;IAAD,qBAAC;CAAA;AAhBsB;;;;;;;;;;;;;;;;;;;;ACRgB;AAM3C;IAII;QACI,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;IAChD,CAAC;IAED,oCAAO,GAAP;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAVQ,kBAAkB;QAD9B,yEAAU,EAAE;;OACA,kBAAkB,CAW9B;IAAD,yBAAC;CAAA;AAX8B;;;;;;;;;;;;;;;;;;;;;;ACNY;AACe;AAET;AAGjD;IAEQ,qBAAoB,WAA+B,EAAU,IAAgB;QAAzD,gBAAW,GAAX,WAAW,CAAoB;QAAU,SAAI,GAAJ,IAAI,CAAY;IAE7E,CAAC;IAED,4BAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,UAAU,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,yBAAG,GAAH,UAAI,EAAU;QACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,WAAW,GAAG,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClG,CAAC;IAGD,4BAAM,GAAN,UAAO,EAAU;QAEb,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,0BAAI,GAAJ,UAAK,IAAmB;QACpB,IAAM,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;QACxF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAvBI,WAAW;QADvB,yEAAU,EAAE;yCAG4B,+EAAkB,EAAgB,wEAAU;OAFxE,WAAW,CAwBnB;IAAD,kBAAC;CAAA;AAxBmB;;;;;;;;;;;;;;;;;;;;;;;ACNmB;AACe;AAER;AAMnB;AAI/B;IAEQ,qBAAoB,WAA+B,EAAU,IAAgB;QAAzD,gBAAW,GAAX,WAAW,CAAoB;QAAU,SAAI,GAAJ,IAAI,CAAY;IAC7E,CAAC;IACG,6BAAO,GAAP,UAAQ,IAAoB;QACxB,IAAM,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,cAAc,EAAE,IAAI,CAAC;IAE1E,CAAC;IART,WAAW;QADvB,yEAAU,EAAE;yCAG4B,+EAAkB,EAAgB,wEAAU;OAFxE,WAAW,CAUP;IAAD,kBAAC;CAAA;AAVO;;;;;;;;;ACbxB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<!-- \\r\\n<main>\\r\\n  <div class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"allPost\\\">Personal blog</a>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"navbar-collapse collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li>\\r\\n            <a routerLink=\\\"newPost\\\">New Post</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n\\r\\n        <ul class=\\\"nav navbar-nav pull-right\\\">\\r\\n          <li>\\r\\n            <a routerLink=\\\"registration\\\">Registration</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a routerLink=\\\"login\\\">LogIn</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container body-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <hr />\\r\\n    <footer>\\r\\n      <p>&copy; 2017  </p>\\r\\n    </footer>\\r\\n  </div>\\r\\n</main> -->\\r\\n<app-header></app-header>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"> \\r\\n\\t<router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n  \n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllPostComponent } from './post/allPosts/allPost.component';\nimport { PostComponent } from './post/post-detail/post.component';\nimport { NewPostComponent } from './post/newPost/newPost.component';\nimport { CommentService } from './services/comment.service';\nimport { PostService } from './services/post.service';\nimport { ConstHelperService } from './services/hostHelper.service';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegistrationComponent } from './auth/registration/registration.component';\nimport { UserService } from './services/user.service';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { HttpModule } from '@angular/http';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthGuard } from './auth.guard';\n\n\n\n\nconst appRoutes: Routes = [\n  { path: '', component: AllPostComponent },\n  { path: 'allPost', component: AllPostComponent },\n  { path: \"allPost/post/:postId\", component: PostComponent },\n  { path: 'post/:postId', component: PostComponent },\n  { path: \"newPost\", component: NewPostComponent,canActivate: [AuthGuard]},\n  { path: \"registration\", component: RegistrationComponent},\n  {path: \"login\", component: LoginComponent}\n  \n\n];\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AllPostComponent,\n    PostComponent,\n    NewPostComponent,\n    HeaderComponent,\n    RegistrationComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n     FormsModule,\n     HttpModule,\n     HttpClientModule,\n     ReactiveFormsModule,\n      RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n\n    CommentService,\n    PostService,\n    ConstHelperService ,\n    UserService,\n    AuthService,\n    AuthGuard,\n  {provide: APP_BASE_HREF, useValue : '/' }\n\n  ],\n  bootstrap: [AppComponent]\n  \n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./services/auth.service\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private user: AuthService,private router: Router) {}\r\n\r\n  canActivate() {\r\n\r\n    if(!this.user.isLoggedIn())\r\n    {\r\n       this.router.navigate(['api/Auth/login']);\r\n       return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.guard.ts","module.exports = \"\\r\\n\\r\\n\\r\\n<div style=\\\"margin-top:100px;\\\">\\r\\n\\r\\n    <h2 class=\\\"text-xs-center\\\">LogIn in Blog</h2>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{'has-error': form.get('username').invalid && form.get('username').touched}\\\"\\r\\n      >\\r\\n        <label for=\\\"username\\\">Email</label>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control underlined\\\"\\r\\n          id=\\\"username\\\"\\r\\n          placeholder=\\\"Enter your email\\\"\\r\\n          formControlName=\\\"username\\\"\\r\\n        >\\r\\n        <span\\r\\n          class=\\\"form-help-text\\\"\\r\\n          *ngIf=\\\"form.get('username').invalid && form.get('username').touched\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"form.get('username')['errors']['required']\\\">Email cant be empty. </span>\\r\\n          <span *ngIf=\\\"form.get('username')['errors']['email']\\\">Enter the correct email. </span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{'has-error': form.get('password').invalid && form.get('password').touched}\\\"\\r\\n      >\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input\\r\\n          type=\\\"password\\\"\\r\\n          class=\\\"form-control underlined\\\"\\r\\n          id=\\\"password\\\"\\r\\n          placeholder=\\\"Password\\\"\\r\\n          formControlName=\\\"password\\\"\\r\\n        >\\r\\n        <span\\r\\n          class=\\\"form-help-text\\\"\\r\\n          *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"form.get('password')['errors']['required']\\\">The password cant be empty </span>\\r\\n          <span *ngIf=\\\"form.get('password')['errors']['minlength']\\\">\\r\\n            The password should be more than\\r\\n            {{ form.get('password')['errors']['minlength']['requiredLength'] }}\\r\\n            characters. Curent size is {{ form.get('password')['errors']['minlength']['actualLength'] }}.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-block btn-primary\\\"\\r\\n          [disabled]=\\\"form.invalid\\\"\\r\\n        >\\r\\n          LogIn\\r\\n        </button>\\r\\n      </div>\\r\\n    \\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\"  >\\r\\n        <strong>The current User is Not Exist!Please make Registration</strong> \\r\\n        <a [routerLink]=\\\"'/registration'\\\">\\r\\n            Register!\\r\\n          </a>\\r\\n    </div>\\r\\n    \\r\\n    </form>\\r\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/login/login.component.html\n// module id = ./src/app/auth/login/login.component.html\n// module chunks = main","\r\n\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n \r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { CredentialsSendModel } from \"../../models/credentialsSendModel\";\r\nimport { UserSendModel } from \"../../models/userSendModel\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  providers: [AuthService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    \r\n     \r\n    form: FormGroup;\r\n    unexist:boolean;\r\n    errors:string;\r\n\r\n    constructor(private authService: AuthService, private router: Router) { }\r\n       \r\n      ngOnInit() {\r\n          this.form = new FormGroup({\r\n            'username': new FormControl(null, [Validators.required, Validators.email]),\r\n            'password': new FormControl(null, [Validators.required, Validators.minLength(6)])\r\n          });\r\n        }\r\n       \r\n        login(){\r\n          const {username, password} = this.form.value;\r\n          const user = new CredentialsSendModel(username,password);\r\n\r\n          this.authService.login(user)\r\n\r\n          .subscribe((result)=>{\r\n            \r\n              if(result){\r\n                this.router.navigate(['/allPost']);\r\n                location.reload();\r\n                return;\r\n              }\r\n              \r\n          },\r\n      \r\n          error => this.errors = error);\r\n          \r\n        }\r\n\r\n      }     \r\n        \n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/login/login.component.ts","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n<div style=\\\"margin-top:100px;\\\">\\r\\n    \\r\\n\\r\\n    <h2  class=\\\"text-xs-center\\\">Registration</h2>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{'has-error': form.get('email').invalid && form.get('email').touched}\\\"\\r\\n      >\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control underlined\\\"\\r\\n          id=\\\"email\\\"\\r\\n          placeholder=\\\"Enter email\\\"\\r\\n          formControlName=\\\"email\\\"\\r\\n        >\\r\\n        <span\\r\\n          class=\\\"form-help-text\\\"\\r\\n          *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"form.get('email')['errors']['required']\\\">Email cant be empty. </span>\\r\\n          <span *ngIf=\\\"form.get('email')['errors']['email']\\\">Pass the correct email. </span>\\r\\n          <span *ngIf=\\\"form.get('email').hasError('isEmailUnique')\\\">This email has been registered already></span>\\r\\n            </span>\\r\\n              \\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{'has-error': form.get('password').invalid && form.get('password').touched}\\\"\\r\\n      >\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input\\r\\n          type=\\\"password\\\"\\r\\n          class=\\\"form-control underlined\\\"\\r\\n          id=\\\"password\\\"\\r\\n          placeholder=\\\"Enter the password\\\"\\r\\n          formControlName=\\\"password\\\"\\r\\n        >\\r\\n        <span\\r\\n          class=\\\"form-help-text\\\"\\r\\n          *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"form.get('password')['errors']['required']\\\">Email cant be empty. </span>\\r\\n          <span *ngIf=\\\"form.get('password')['errors']['minlength'] && form.get('password')['errors']['minlength']['requiredLength']\\\">\\r\\n           Password should be more than\\r\\n            {{ form.get('password')['errors']['minlength']['requiredLength'] }}\\r\\n            characters. Your current password lengt {{ form.get('password')['errors']['minlength']['actualLength'] }}.\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{'has-error': form.get('name').invalid && form.get('name').touched}\\\"\\r\\n      >\\r\\n        <label for=\\\"name\\\">Name</label>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control underlined\\\"\\r\\n          id=\\\"name\\\"\\r\\n          placeholder=\\\"Enter the name\\\"\\r\\n          formControlName=\\\"name\\\"\\r\\n        >\\r\\n        <span\\r\\n          class=\\\"form-help-text\\\"\\r\\n          *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\"\\r\\n        >\\r\\n          The name cant be empty\\r\\n        </span>\\r\\n      </div>\\r\\n    \\r\\n    <div\\r\\n    class=\\\"form-group\\\"\\r\\n    [ngClass]=\\\"{'has-error': form.get('location').invalid && form.get('location').touched}\\\"\\r\\n    >\\r\\n    <label for=\\\"name\\\">Location</label>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      class=\\\"form-control underlined\\\"\\r\\n      id=\\\"location\\\"\\r\\n      placeholder=\\\"Enter your current Location\\\"\\r\\n      formControlName=\\\"location\\\"\\r\\n    >\\r\\n    <span\\r\\n      class=\\\"form-help-text\\\"\\r\\n      *ngIf=\\\"form.get('location').invalid && form.get('location').touched\\\"\\r\\n    >\\r\\n      The Location cant be empty\\r\\n    </span>\\r\\n    </div>\\r\\n    \\r\\n      \\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{'has-error': form.get('agree').invalid && form.get('agree').touched}\\\"\\r\\n      >\\r\\n        <label for=\\\"agree\\\">\\r\\n          <input\\r\\n            class=\\\"checkbox\\\"\\r\\n            id=\\\"agree\\\"\\r\\n            type=\\\"checkbox\\\"\\r\\n            formControlName=\\\"agree\\\"\\r\\n          >\\r\\n          <span>I agree with rules</span>\\r\\n        </label>\\r\\n      </div>\\r\\n    \\r\\n     \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-block btn-primary\\\"\\r\\n          [disabled]=\\\"form.invalid\\\"\\r\\n        >\\r\\n          Register\\r\\n        </button>\\r\\n      \\r\\n        <div *ngIf=\\\"exist\\\" class=\\\"alert alert-danger\\\"  >\\r\\n            <strong>The current Email is exist!</strong> \\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </form>\\r\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/registration/registration.component.html\n// module id = ./src/app/auth/registration/registration.component.html\n// module chunks = main","\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"../../services/user.service\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserSendModel } from \"../../models/userSendModel\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'registration',\r\n    templateUrl: './registration.component.html',\r\n    providers: [UserService]\r\n  })\r\n\r\n\r\nexport class RegistrationComponent implements OnInit {\r\n    \r\n      form: FormGroup;\r\n      exist:boolean;\r\n      constructor(private usersService: UserService, private router: Router) {\r\n     \r\n      }\r\n    \r\n      ngOnInit() {\r\n        this.form = new FormGroup({\r\n          'email': new FormControl(null, [Validators.required, Validators.email]),\r\n          'password': new FormControl(null, [Validators.required, Validators.minLength(6)]),\r\n          'name': new FormControl(null, [Validators.required]),\r\n          'location': new FormControl(null, [Validators.required]),\r\n          'agree': new FormControl(false, [Validators.requiredTrue])\r\n        });\r\n      }\r\n    \r\n      \r\n      onSubmit() {\r\n        const {email, password, name,location} = this.form.value;\r\n        const user = new UserSendModel(email, password, name,location);\r\n        this.usersService.addUser(user).subscribe((result:UserSendModel) => {\r\n            console.log(result);\r\n            if (!result.exist) {\r\n                 \r\n              this.router.navigateByUrl('/login');\r\n              return;\r\n            }  \r\n            this.exist=true;\r\n            this.router.navigateByUrl('/registration');\r\n        }, error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n           \r\n          \r\n      }\r\n    \r\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/registration/registration.component.ts","module.exports = \"\\r\\n\\r\\n<main>\\r\\n   \\r\\n   \\r\\n    <div class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n          <a class=\\\"navbar-brand\\\"  routerLinkActive=\\\"active\\\" routerLink=\\\"allPost\\\">Personal blog</a>\\r\\n        </div>\\r\\n  \\r\\n       \\r\\n        <div class=\\\"navbar-collapse collapse\\\">\\r\\n          <ul  *ngIf=\\\"status\\\" class=\\\"nav navbar-nav\\\">\\r\\n            <li>\\r\\n              <a   routerLinkActive=\\\"active\\\" routerLink=\\\"newPost\\\">New Post</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n  \\r\\n         \\r\\n          <ul *ngIf=\\\"!status\\\" class=\\\"nav navbar-nav pull-right\\\">\\r\\n            <li>\\r\\n              <a routerLinkActive=\\\"active\\\" routerLink=\\\"registration\\\">Registration</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a  routerLinkActive=\\\"active\\\" routerLink=\\\"login\\\">LogIn</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n\\r\\n          \\r\\n          <ul *ngIf=\\\"status\\\" class=\\\"nav navbar-nav pull-right\\\">\\r\\n             \\r\\n            <li>\\r\\n              <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" href=\\\"#\\\">LogOut</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n\\r\\n        </div>\\r\\n  \\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <div class=\\\"container body-content\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n      <hr />\\r\\n      <footer>\\r\\n        <p>&copy; 2017  </p>\\r\\n      </footer>\\r\\n    </div>\\r\\n  </main>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = ./src/app/header/header.component.html\n// module chunks = main","import { OnInit, OnDestroy, Component } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    providers: [AuthService]\r\n  })\r\n  export class HeaderComponent implements OnInit,OnDestroy{\r\n    \r\n    status: boolean;\r\n subscription:Subscription;  \r\n\r\n constructor(private authService:AuthService) {   \r\n\r\n}\r\n\r\nlogout() {\r\n    this.authService.logout();       \r\n }\r\n\r\n ngOnInit() {\r\n    this.subscription = this.authService.authNavStatus$.subscribe(status => this.status = status);\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    \r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","\r\nexport class CommentSendModel{\r\n    constructor(\r\n       public  author: string,\r\n       public  commentText: string,\r\n      public  postId: number\r\n    ){}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/commentSendModel.ts","\r\nexport class CredentialsSendModel{\r\n   \r\n    constructor(\r\n   \r\n    public username:string,\r\n    public password:string\r\n\r\n    \r\n\r\n   ){}\r\n    \r\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/credentialsSendModel.ts","\r\nimport { Comment } from '../models/commentModel';\r\n\r\nexport class PostModel{\r\n    public postId: number;\r\n    public title: string;\r\n    public description: string;\r\n    public author: string;\r\n    public dateTime: string;\r\n    public comment: Comment[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/postModel.ts","\r\nexport class PostSendModel{\r\n    constructor(\r\npublic title:string,\r\npublic description:string,\r\npublic author: string,\r\n    ){}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/postSendModel.ts","\r\n\r\nexport class UserSendModel{\r\n    constructor(\r\n    public email:string,\r\n    public password:string,\r\n    public name:string,\r\n    public location:string,\r\n    \r\n    public exist?:boolean\r\n    ){}\r\n    \r\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/userSendModel.ts","module.exports = \"\\r\\n\\r\\n   <div style=\\\"margin-top:100px;\\\">\\r\\n    <h1>PERSONAL BLOG</h1> \\r\\n \\r\\n\\r\\n\\r\\n<div id=\\\"postlist\\\" *ngFor=\\\"let item of postModel\\\">\\r\\n        \\r\\n        <div class=\\\"panel\\\">\\r\\n    \\r\\n            <div class=\\\"panel-heading\\\">\\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-9\\\">\\r\\n                            <h3 class=\\\"pull-left\\\">\\r\\n                                    <h3><a [routerLink]=\\\"['post', item.postId]\\\" class=\\\"nav-link\\\">{{item.title}}</a></h3>\\r\\n                            </h3>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n                            <h4 class=\\\"pull-right\\\">\\r\\n                                <small>Author: {{item.author}}</small>\\r\\n                                <span class=\\\"glyphicon glyphicon-remove-circle\\\" (click)=\\\"dell(item.postId)\\\"></span>\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                 {{item.description}}  \\r\\n            </div>\\r\\n            <div class=\\\"panel-footer\\\">\\r\\n     \\r\\n                <h4>\\r\\n                         \\r\\n                         <small class=\\\"pull-right\\\">{{item.dateTime}}</small>\\r\\n                </h4>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/post/allPosts/allPost.component.html\n// module id = ./src/app/post/allPosts/allPost.component.html\n// module chunks = main","import { Component,OnInit } from \"@angular/core\";\r\nimport { PostService } from \"../../services/post.service\";\r\nimport { PostModel } from \"../../models/postModel\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n    \r\n    selector: 'allPost',\r\n    templateUrl: \"allPost.component.html\",\r\n    \r\n    providers: [PostService]\r\n    \r\n})\r\nexport class AllPostComponent implements OnInit {\r\n\r\n    postModel: PostModel[];\r\n    commentlength:number;\r\n \r\n    constructor(private postService: PostService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.load();      \r\n    }\r\n\r\n\r\n    load(){\r\n        this.postService.getAll().subscribe((data: PostModel[]) =>  this.postModel = data);\r\n       \r\n    }\r\n    \r\n\r\n    dell(id: number) {\r\n        \r\n         this.postService.delete(id).subscribe((data :PostModel[])=> this.load());\r\n        \r\n     }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/post/allPosts/allPost.component.ts","module.exports = \"\\r\\n <div id=\\\"newPost\\\" style=\\\"margin-top:100px;\\\">\\r\\n    <h1>New Post</h1>\\r\\n \\r\\n \\r\\n     <form name=\\\"Form\\\" id=\\\"contact-form\\\" (ngSubmit)=\\\"create(form)\\\" #form=\\\"ngForm\\\" class=\\\"contact-form\\\">\\r\\n         <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n                 <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': title.invalid && title.touched}\\\">\\r\\n                     <input type=\\\"text\\\"   class=\\\"form-control\\\" [(ngModel)]=\\\"Title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" required  #title=\\\"ngModel\\\" >\\r\\n                    <p *ngIf=\\\"title.invalid && title.touched\\\">Enter the Title</p>\\r\\n                    \\r\\n                 </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n                 <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': author.invalid && author.touched}\\\">\\r\\n                     <input type=\\\"text\\\"   class=\\\"form-control\\\" [(ngModel)]=\\\"Author\\\" name=\\\"author\\\" placeholder=\\\"author\\\" required #author=\\\"ngModel\\\">\\r\\n                     <p *ngIf=\\\"author.invalid && author.touched\\\">Enter the Author</p>\\r\\n                 </div>\\r\\n             </div>\\r\\n           \\r\\n         </div>\\r\\n         <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-12\\\">\\r\\n                 <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': description.invalid && description.touched}\\\">\\r\\n                     <textarea class=\\\"form-control textarea\\\" rows=\\\"3\\\" [(ngModel)]=\\\"Description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" required #description=\\\"ngModel\\\"></textarea>\\r\\n                     <p *ngIf=\\\"description.invalid && description.touched\\\">Enter the Description</p>\\r\\n                 </div>\\r\\n             </div>\\r\\n         </div>\\r\\n         <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-12\\\">\\r\\n \\r\\n             </div>\\r\\n         </div>\\r\\n         <button   type=\\\"submit\\\" id=\\\"addPost\\\" class=\\\"btn main-btn pull-right\\\" [disabled]=\\\"!form.valid\\\"  >Send a message</button>\\r\\n         <a routerLink=\\\"/\\\" class=\\\"btn btn-warning\\\">Back to Blog</a>\\r\\n     </form>\\r\\n \\r\\n \\r\\n </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/post/newPost/newPost.component.html\n// module id = ./src/app/post/newPost/newPost.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { PostModel } from \"../../models/postModel\";\r\nimport { PostService } from \"../../services/post.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { PostSendModel } from \"../../models/postSendModel\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n\r\n@Component({  \r\n    selector: 'newPost',\r\n    templateUrl: \"newPost.component.html\",\r\n    styles: ['.countries { width: 300px; }']\r\n})\r\n\r\nexport class NewPostComponent {\r\n    Title: string;\r\n    Author: string;\r\n    Description: string;\r\n    \r\n    postModel: PostModel[] ;\r\n   \r\n\r\n    constructor(private postService: PostService, private router: Router ) { }\r\n\r\n    load(){\r\n        this.postService.getAll().subscribe((data: PostModel[]) =>  this.postModel = data);\r\n       \r\n    }\r\n\r\n    create( form: NgForm) {\r\n        \r\n        let post: PostSendModel = new PostSendModel(this.Title,this.Description ,this.Author );\r\n        this.postService.post(post).subscribe(data => this.router.navigateByUrl(\"/\"));\r\n            \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/post/newPost/newPost.component.ts","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n<div id=\\\"postlist\\\" style=\\\"margin-top:100px;\\\">\\r\\n    <div class=\\\"panel\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                        <h3 class=\\\"pull-left\\\">{{postModel.title}}</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n                        <h4 class=\\\"pull-right\\\">\\r\\n                                 \\r\\n                            <small>Author {{postModel.author}}</small>\\r\\n                            <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            {{postModel.description}}\\r\\n        </div>\\r\\n        <div class=\\\"panel-footer\\\">\\r\\n            <h4>\\r\\n                 <span> {{commentlength}} </span>\\r\\n                <span class=\\\" glyphicon glyphicon-comment\\\"></span>\\r\\n                <small class=\\\"pull-right\\\">{{postModel.dateTime}}</small>\\r\\n            </h4>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n <div *ngIf=\\\"commentlength>0\\\">\\r\\n<h1><em>Comments:</em></h1>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div id=\\\"postlist\\\" *ngFor=\\\"let item of postModel.comment\\\">\\r\\n\\r\\n   <div class=\\\"panel\\\">\\r\\n\\r\\n       <div class=\\\"panel-heading\\\">\\r\\n           <div class=\\\"text-center\\\">\\r\\n               <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-sm-9\\\">\\r\\n                       <h3 class=\\\"pull-left\\\">\\r\\n                               <small>{{item.author}}</small>\\r\\n                               \\r\\n                       </h3>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-sm-3\\\">\\r\\n                       \\r\\n                       <h4 class=\\\"pull-right\\\">\\r\\n                           <small> {{item.dateTime}}</small>\\r\\n                           <span class=\\\"glyphicon glyphicon-remove-circle\\\" (click)=\\\"delete(item.commentId)\\\"></span>\\r\\n                       </h4>\\r\\n                   </div>\\r\\n               </div>\\r\\n           </div>\\r\\n       </div>\\r\\n       <div class=\\\"panel-body\\\">\\r\\n           {{item.commentText}}\\r\\n       </div>\\r\\n       <div class=\\\"panel-footer\\\">\\r\\n\\r\\n       </div>\\r\\n   </div>\\r\\n</div> \\r\\n\\r\\n\\r\\n \\r\\n<div>\\r\\n <h3>Add Comment:</h3>\\r\\n    <form name=\\\"Form\\\" role=\\\"form\\\" id=\\\"contact-form\\\" (ngSubmit)=\\\"addComment()\\\" class=\\\"contact-form\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"author\\\" class=\\\"form-control\\\" name=\\\"Name\\\" placeholder=\\\"Name\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <textarea class=\\\"form-control textarea\\\" [(ngModel)]=\\\"commentText\\\" rows=\\\"3\\\" name=\\\"Commentary\\\" placeholder=\\\"Comment\\\" required></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <button class=\\\"btn main-btn pull-right\\\">Send</button>\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-warning\\\">Back to Blog</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/post/post-detail/post.component.html\n// module id = ./src/app/post/post-detail/post.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { PostService } from \"../../services/post.service\";\r\nimport { CommentService } from \"../../services/comment.service\";\r\nimport { PostModel } from \"../../models/postModel\";\r\n\r\nimport { CommentSendModel } from \"../../models/commentSendModel\";\r\n\r\nimport { Comment } from \"../../models/commentModel\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n\r\n @Component({\r\n    \r\n       \r\n    selector: 'post',\r\n    templateUrl: \"post.component.html\",\r\n    providers: [PostService,CommentService]\r\n})\r\n\r\nexport class PostComponent implements OnInit {\r\n    \r\n        postModel: PostModel = new PostModel();\r\n      \r\n        author: string;\r\n        commentText: string;\r\n\r\n        commentlength:number;\r\n    \r\n        comments: Comment[] = new Array();\r\n\r\n        postId: number;\r\n        constructor(private activateRoute: ActivatedRoute, private postService: PostService, private commentService: CommentService,private router: Router) {\r\n            this.postId = Number.parseInt(activateRoute.snapshot.params['postId']);\r\n        }\r\n    \r\n        ngOnInit() {\r\n           \r\n           this.load();\r\n           console.log(this.postModel.comment);\r\n        }\r\n    \r\n        load(){\r\n            this.postService.get(this.postId).subscribe((data: PostModel) => { this.postModel = data; this.comments = this.postModel.comment;\r\n                 this.commentlength = this.postModel.comment.length; });\r\n        }\r\n      \r\n            \r\n        addComment() {\r\n            let coment: CommentSendModel = new CommentSendModel(this.author, this.commentText, this.postModel.postId);\r\n            this.commentService.addComment(coment).subscribe((data:PostModel) => this.load());\r\n         \r\n             this.author = null;\r\n            this.commentText = null;               \r\n           \r\n        }\r\n    \r\n        delete(id: number) {\r\n            this.commentService.delete(id).subscribe((data:PostModel) => this.load());\r\n            \r\n        }\r\n    \r\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/app/post/post-detail/post.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from 'rxjs/Rx'; \r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Http,Headers,Response,RequestOptions } from \"@angular/http\";\r\nimport { ConstHelperService } from \"./hostHelper.service\";\r\nimport { CredentialsSendModel } from \"../models/credentialsSendModel\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n   \r\n\r\n@Injectable()\r\nexport class AuthService    {\r\n    \r\n    private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n\r\n    authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n    private loggedIn = false;\r\n\r\n    constructor(private constHelper: ConstHelperService,private http: Http) {\r\n      \r\n         \r\n        this.loggedIn = !!localStorage.getItem('auth_token');\r\n        this._authNavStatusSource.next(this.loggedIn);\r\n\r\n    }\r\n\r\n    login(user:CredentialsSendModel){\r\n        const body = { UserName:user.username,Password:user.password };\r\n        let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n \r\n    return this.http.post(this.constHelper.getHost() + 'api/Auth/login',  body,{ headers })\r\n     .map(res=>res.json())\r\n     .map(res=>{\r\n            localStorage.setItem('auth_token',res.auth_token);\r\n           this.loggedIn = true;\r\n             this._authNavStatusSource.next(true); \r\n             return true;         \r\n    })\r\n     \r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('auth_token');\r\n        this.loggedIn = false;\r\n        this._authNavStatusSource.next(false);\r\n    }\r\n\r\n    isLoggedIn(){\r\n        return this.loggedIn;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { ConstHelperService } from \"./hostHelper.service\";\r\nimport { CommentSendModel } from \"../models/commentSendModel\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n    \r\n        constructor(private constHelper: ConstHelperService, private http: HttpClient) {\r\n        }\r\n    \r\n      \r\n        addComment(comment: CommentSendModel) {\r\n    \r\n           return this.http.post(this.constHelper.getHost() + 'api/Comment', comment);\r\n        }\r\n    \r\n        delete(id: number) {\r\n    \r\n    \r\n         return  this.http.delete(this.constHelper.getHost() + 'api/Comment/' + id);\r\n        }\r\n    } \n\n\n// WEBPACK FOOTER //\n// ./src/app/services/comment.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient} from '@angular/common/http';\r\n \r\n\r\n\r\n@Injectable()\r\nexport class ConstHelperService {\r\n\r\n    path: string;\r\n  \r\n    constructor() {\r\n        this.path = \"http://\" + location.host + \"/\";\r\n    }\r\n\r\n    getHost(){\r\n        return this.path;\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/app/services/hostHelper.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { ConstHelperService } from \"./hostHelper.service\";\r\nimport { PostSendModel } from \"../models/postSendModel\";\r\nimport { HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PostService {\r\n    \r\n        constructor(private constHelper: ConstHelperService, private http: HttpClient) {\r\n    \r\n        }\r\n    \r\n        getAll() {\r\n            return this.http.get(this.constHelper.getHost() + 'api/Post', { responseType: \"json\" });\r\n        }\r\n    \r\n        get(id: number) {\r\n            return this.http.get(this.constHelper.getHost() + 'api/Post/' + id, { responseType: \"json\" });\r\n        }\r\n    \r\n    \r\n        delete(id: number) {\r\n             \r\n            return  this.http.delete(this.constHelper.getHost() + 'api/Post/' + id);\r\n        }\r\n    \r\n        post(post: PostSendModel) {\r\n            const body = { Title: post.title, Author: post.author, Description: post.description };\r\n           return this.http.post(this.constHelper.getHost() + 'api/Post', body);\r\n        }\r\n    } \n\n\n// WEBPACK FOOTER //\n// ./src/app/services/post.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { ConstHelperService } from \"./hostHelper.service\";\r\nimport { UserSendModel } from \"../models/userSendModel\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { BehaviorSubject } from 'rxjs/Rx';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport 'rxjs/add/operator/map';\r\nimport { CredentialsSendModel } from \"../models/credentialsSendModel\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n         \r\n        constructor(private constHelper: ConstHelperService, private http: HttpClient) {             \r\n        }    \r\n            addUser(user : UserSendModel) {\r\n                const body = { Email: user.email, Name: user.name, Location: user.location,Password:user.password };\r\n                       return this.http.post(this.constHelper.getHost() + 'api/Accounts', body)\r\n                                    \r\n                     }         \r\n          \r\n                }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}